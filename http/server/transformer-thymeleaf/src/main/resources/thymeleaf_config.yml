#when static files are being served, files with the following extensions will be passed through
#thymelead first so that thymeleaf directives can be processed
#these must be valid Java regex values
auto_parse_extensions : ".*html,.*htm,.*tpl"
#Thymeleaf template mode on of Thymeleaf's supported XML,VALIDXML,XHTML,VALIDXHTML,LEGACYHTML5,HTML5
template_mode : HTML5
#if true templates are cache after first load
cacheable : true
#24hrs in milliseconds  (max time a template is cached for)
cache_age_ms : 86400000
#encoding used to read template files
character_encoding : utf-8
#suffix appended to all templates so that index becomes defaultt.html
suffix : .html
#prefix prepended to all templates. can be directory or string...or both
prefix : templates/
#the resolvers determine how a template is loaded and in which order
#if 1 then try to load templates from the class path first
classLoader_resolver_order : 2
#try to load templates after class path if template not found
fileResolver_order : 1
url_resolver_order : 3
#when a resource returns a map, should the map's keys become template variable names?
convert_map_responses_to_key_value_pairs : true
#when a resource returns a pojo (not primitive, list,map,set or array)
#should it's fields become template variables?
convert_pojo_responses_to_key_value_pairs : true
#thymeleaf shouldn't be configured after initialization. set this to false if you need to
#do additional configuration, such as add a dialect etc...
auto_initialize_thymeleaf : true
#if true then thymeleaf's locale is set to the locale obtained from the Accept-Language http header
#if you use multiple language files it will load one based on this locale
determine_language_from_accept_header : true
#if true then whenever a method specifies multiple templates those templates are merged into one file before being passed to Thymleaf
#this allows invalid/incomplete fragments HTML to be put into different files and combined to form a complete template
#if this is false then the fragments are only combined the first time the resource is requested or if a combined file doesn't exist already
#note that when merged together fragments must form a valid document for the template_mode set otherwise Thymeleaf will throw an exception
merge_fragments_on_each_request : true
#a directory where generated templates are created. this is relative to the "prefix" option
fragments_dir : "merged-fragments/"
